---
- name: Get available AZs
  amazon.aws.aws_az_info:
    filters:
      region-name: '{{ aws_region }}'
  register: _az_info

- name: Pick an AZ
  ansible.builtin.set_fact:
    ec2_availability_zone_names: '{{ _az_info.availability_zones | selectattr("zone_name", "defined") | map(attribute="zone_name") | list }}'

- name: 'Pick 2 AZs available for use'
  ansible.builtin.set_fact:
    subnet_az_a_1: '{{ ec2_availability_zone_names[0] }}'
    subnet_az_b_1: '{{ ec2_availability_zone_names[0] }}'

- name: 'Create VPCs to attach to TGW'
  amazon.aws.ec2_vpc_net:
    cidr_block: '{{ item.cidr }}'
    name: '{{ item.name }}'
    ipv6_cidr: True
  loop:
  - cidr: '{{ vpc_cidr_a }}'
    name: '{{ vpc_name_a }}'
  - cidr: '{{ vpc_cidr_b }}'
    name: '{{ vpc_name_b }}'
  register: create_vpcs


- name: 'Set facts'
  ansible.builtin.set_fact:
    vpc_id_a: '{{ vpc_a.id }}'
    vpc_id_b: '{{ vpc_b.id }}'
    vpc_owner_a: '{{ vpc_a.owner_id }}'
    vpc_owner_b: '{{ vpc_b.owner_id }}'
  vars:
    vpc_a: '{{ create_vpcs.results[0].vpc }}'
    vpc_b: '{{ create_vpcs.results[1].vpc }}'

- name: 'Create subnets'
  amazon.aws.ec2_vpc_subnet:
    az: '{{ item.az }}'
    cidr: '{{ item.cidr }}'
    tags:
      Name: '{{ item.name }}'
    vpc_id: '{{ item.vpc_id }}'
  loop:
  - az: '{{ subnet_az_a_1 }}'
    cidr: '{{ subnet_cidr_a_1 }}'
    vpc_id: '{{ vpc_id_a }}'
    name: '{{ subnet_name_a_1 }}'
  - az: '{{ subnet_az_b_1 }}'
    cidr: '{{ subnet_cidr_b_1 }}'
    vpc_id: '{{ vpc_id_b }}'
    name: '{{ subnet_name_b_1 }}'
  register: create_subnets


- name: 'Set facts'
  ansible.builtin.set_fact:
    subnet_id_a_1: '{{ create_subnets.results[0].subnet.id }}'
    subnet_id_b_1: '{{ create_subnets.results[1].subnet.id }}'

- name: Create customer gateway
  community.aws.ec2_customer_gateway:
    bgp_asn: 12345
    ip_address: 1.2.3.4
    name: testcgw
  register: cgw

- name: 'Set facts'
  ansible.builtin.set_fact:
    customer_gw_id: '{{ cgw.gateway.customer_gateway.customer_gateway_id }}'
