---
- name: Create resources playbook
  module_defaults:
    group/aws:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      security_token: "{{ security_token | default(omit) }}"
  block:
    - name: Get security group id - primary region
      amazon.aws.ec2_security_group_info:
        filters:
          group-name: "{{ rds_secgroup_name }}"
        region: "{{ rds_primary_cluster_region }}"
      register: rds_primary_sg

    - name: Get security group id - replica region
      amazon.aws.ec2_security_group_info:
        filters:
          group-name: "{{ rds_secgroup_name }}"
        region: "{{ rds_replica_cluster_region }}"
      register: rds_replica_sg

    - name: Create  Aurora db cluster
      ansible.builtin.include_role:
        name: cloud.aws_ops.create_rds_global_cluster
      vars:
        create_rds_global_cluster_operation: create
        create_rds_global_cluster_engine: "{{ rds_engine }}"
        create_rds_global_cluster_engine_version: "{{ rds_engine_version }}"
        create_rds_global_cluster_instance_class: "{{ rds_instance_class }}"
        create_rds_global_cluster_master_username: "{{ deploy_flask_app_rds_master_username }}"
        create_rds_global_cluster_master_user_password: "{{ deploy_flask_app_rds_master_password }}"
        create_rds_global_cluster_global_cluster_name: "{{ rds_global_cluster_name }}"
        create_rds_global_cluster_primary_cluster_name: "{{ rds_primary_cluster_name }}"
        create_rds_global_cluster_primary_cluster_region: "{{ rds_primary_cluster_region }}"
        create_rds_global_cluster_primary_cluster_instance_name: "{{ rds_primary_cluster_instance_name }}"
        create_rds_global_cluster_replica_cluster_name: "{{ rds_replica_cluster_name }}"
        create_rds_global_cluster_replica_cluster_region: "{{ rds_replica_cluster_region }}"
        create_rds_global_cluster_replica_cluster_instance_name: "{{ rds_replica_cluster_instance_name }}"
        create_rds_global_cluster_db_subnet_group_name: "{{ rds_subnet_group_name }}"
        create_rds_global_cluster_primary_cluster_db_name: "{{ rds_instance_name }}"
        create_rds_global_cluster_primary_cluster_vpc_security_group_ids:
          - "{{ rds_primary_sg.security_groups[0].group_id }}"
        create_rds_global_cluster_replica_cluster_vpc_security_group_ids:
          - "{{ rds_replica_sg.security_groups[0].group_id }}"

    - name: Get primary instance info
      amazon.aws.rds_instance_info:
        db_instance_identifier: "{{ rds_primary_cluster_instance_name }}"
        region: "{{ rds_primary_cluster_region }}"
      register: primary_instance_info_result

    - name: Get primary cluster info
      amazon.aws.rds_cluster_info:
        db_cluster_identifier: "{{ rds_primary_cluster_name }}"
        region: "{{ rds_primary_cluster_region }}"
      register: primary_cluster_info_result

    - name: Get global db info
      ansible.builtin.command: "aws rds describe-global-clusters --global-cluster-identifier {{  rds_global_cluster_name }}"
      register: global_cluster_info_result

    - name: convert it to an object
      ansible.builtin.set_fact:
        global_cluster_info: "{{ global_cluster_info_result.stdout | from_json }}"

    - name: Assert that primary cluster is a part of global db
      ansible.builtin.assert:
        that:
          - global_cluster_info.GlobalClusters[0].GlobalClusterMembers[0].DBClusterArn == primary_cluster_info_result.clusters[0].db_cluster_arn

    - name: Get replica instance info
      amazon.aws.rds_instance_info:
        db_instance_identifier: "{{ rds_replica_cluster_instance_name }}"
        region: "{{ rds_replica_cluster_region }}"
      register: replica_instance_info_result

    - name: Get replica cluster info
      amazon.aws.rds_cluster_info:
        db_cluster_identifier: "{{ rds_replica_cluster_name }}"
        region: "{{ rds_replica_cluster_region }}"
      register: replica_cluster_info_result

    - name: Get global db info
      ansible.builtin.command: "aws rds describe-global-clusters --global-cluster-identifier {{ rds_global_cluster_name }}"
      register: global_cluster_info_result

    - name: Convert it to an object
      ansible.builtin.set_fact:
        global_cluster_info: "{{ global_cluster_info_result.stdout | from_json }}"

    - name: Assert that replica cluster is a part of global db
      ansible.builtin.assert:
        that:
          - global_cluster_info.GlobalClusters[0].GlobalClusterMembers[1].DBClusterArn == replica_cluster_info_result.clusters[0].db_cluster_arn
