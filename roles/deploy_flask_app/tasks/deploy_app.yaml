---
- name: Deploy application into worker
  delegate_to: "{{ worker_id }}"
  vars:
    deploy_flask_app__worker_container_name: "webapp-container1"
  block:
    - name: Update ssh_config
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regex: "{{ item.regex }}"
        line: "{{ item.line }}"
      loop:
        - regex: ^(# *)?ClientAliveInterval
          line: ClientAliveInterval  1200
        - regex: ^(# *)?ClientAliveCountMax
          line: ClientAliveCountMax 3
      become: true

    - name: Install Podman
      ansible.builtin.yum:
        name:
          - podman
        update_cache: False
        state: present
      become: true

    - name: Check running container
      ansible.builtin.shell:
        cmd: >
          podman container ps -a
          -f name={{ deploy_flask_app__worker_container_name }}
          --format=.Names
      register: container
      changed_when: false

    - name: Run application instance
      ansible.builtin.shell:
        cmd: >-
          podman run --rm
          -e FLASK_APP="{{ deploy_flask_app_config.app_dir }}"
          -e FLASK_ENV="{{ deploy_flask_app_config.env }}"
          -e DATABASE_HOST="{{ deploy_flask_app__rds_host }}"
          -e DATABASE_INSTANCE="{{ deploy_flask_app__rds_dbname }}"
          -e DATABASE_USER="{{ deploy_flask_app_rds_master_username }}"
          -e DATABASE_PASSWORD="{{deploy_flask_app_rds_master_password }}"
          -e ADMIN_USER="{{ deploy_flask_app_config.admin_user }}"
          -e ADMIN_PASSWORD="{{ deploy_flask_app_config.admin_password }}"
          -e WORKER_HOSTNAME="{{ worker_id }}"
          -e WORKERS_HOSTS="{{ deploy_flask_app_instances | join(',') }}"
          -p 5000:5000 --name {{ deploy_flask_app__worker_container_name }}
          -d {{ deploy_flask_app_container_image }}
      when:
        - container.stdout == ""
      changed_when: true
