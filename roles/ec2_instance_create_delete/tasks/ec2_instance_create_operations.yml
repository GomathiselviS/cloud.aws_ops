---
- name: Verify that an instance with same name does not exist
  block:
    - name: Get instance info with provided name
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ ec2_instance_create_delete_instance_name }}"
          instance-state-name: ["pending", "running", "stopping", "stopped"]
      register: ec2_info_result

    - name: Print warning and exit if instance exists
      ansible.builtin.fail:
        msg: "Instance with name {{ ec2_instance_create_delete_instance_name }} already exists in {{ aws_region }}. Please provide a different name to avoid updating the existing instance."
      when: ec2_info_result.instances | length > 0

- name: Create a key pair if required
  when: ec2_instance_create_delete_key_name is defined and ec2_instance_create_delete_key_name | length > 0
  block:
    - name: Get key pair info
      amazon.aws.ec2_key_info:
        names:
          - "{{ ec2_instance_create_delete_key_name }}"
      register: key_info_result

    - name: Create new key pair
      amazon.aws.ec2_key:
        name: "{{ ec2_instance_create_delete_key_name }}"
        state: present
      when: key_info_result.keypairs | length == 0
      register: new_key_pair_result

- name: Create EC2 instance with provided configuration
  amazon.aws.ec2_instance:
    state: running
    name: "{{ ec2_instance_create_delete_instance_name }}"
    instance_type: "{{ ec2_instance_create_delete_instance_type }}"
    image_id: "{{ ec2_instance_create_delete_ami_id }}"
    key_name: "{{ ec2_instance_create_delete_key_name | default(omit) }}"
    security_groups: "{{ ec2_instance_create_delete_associate_security_groups | default(omit, true) }}"
    vpc_subnet_id: "{{ ec2_instance_create_delete_vpc_subnet_id | default(omit) }}"
    tags: "{{ ec2_instance_create_delete_tags | default(omit) }}"
    wait: "{{ ec2_instance_create_delete_wait_for_state }}"
  register: ec2_instance

- name: Allocate and associate Elastic IP if enabled
  when: ec2_instance_create_delete_associate_eip is true
  amazon.aws.ec2_eip:
    device_id: "{{ ec2_instance.instance_ids[0] }}"
    state: present
    release_on_disassociation: true
  register: instance_eip

- name: Get EC2 instance info
  amazon.aws.ec2_instance_info:
    instance_ids: "{{ ec2_instance.instance_ids[0] }}"
  register: _ec2_instance

- name: Output details of the created EC2 instance
  ansible.builtin.debug:
    msg:
      - "EC2 instance {{ ec2_instance.instance_ids[0] }} created successfully"
      - "Instance details: {{ _ec2_instance.instances[0] }}"

- name: Output private key if a new keypair was created
  when: new_key_pair_result.key is defined
  ansible.builtin.debug:
    msg: "A new key pair was created for ssh access to the instance. Please save this private key for reference, it will not be accessible again: {{ new_key_pair_result.key.private_key }}"
