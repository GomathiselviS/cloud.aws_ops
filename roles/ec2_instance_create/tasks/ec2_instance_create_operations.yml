---
- name: Verify exclusive parameters
  block:
    - name: Check for security group ID
      ansible.builtin.fail:
        msg: "ec2_instance_create_external_sg_id and ec2_instance_create_associate_external_sg are mutually exlcusive.
              Please provide only one to either associate existing or create new sg."
      when: ec2_instance_create_external_sg_id != None and ec2_instance_create_associate_external_sg is true

- name: Verify that the instance and security group with same name does not exist
  block:
    - name: Get instane info with provided name
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_instance_create_aws_region }}"
        filters:
          tag:Name: "{{ ec2_instance_create_instance_name }}"
          instance-state-name: ["running"]
      register: ec2_info_result

    - name: Print warning and exit
      ansible.builtin.fail:
        msg: "Instance with name {{ ec2_instance_create_instance_name }} already exists in {{ ec2_instance_create_aws_region }}. 
              Please provide different name to avoid updating instance."
      when: ec2_info_result.instances | length >= 1

- name: Create EC2 instance with provided configuration
  amazon.aws.ec2_instance:
    region: "{{ ec2_instance_create_aws_region }}"
    name: "{{ ec2_instance_create_instance_name }}"
    instance_type: "{{ ec2_instance_create_instance_type }}"
    image_id: "{{ ec2_instance_create_ami_id }}"
    key_name: "{{ ec2_instance_create_key_name }}"
    vpc_subnet_id: "{{ ec2_instance_create_vpc_subnet_id }}"
    security_group: "{{ ec2_instance_create_external_sg_id | default(omit) }}"
    tags: "{{ ec2_instance_create_tags | default(omit) }}"
    wait: "{{ ec2_instance_create_wait_for_boot }}"
  register: ec2_instance

- name: Create security group if enabled
  when: ec2_instance_create_associate_external_sg is true
  block:
    - name: Define security group
      amazon.aws.ec2_security_group:
        name: "{{ ec2_instance_create_external_sg_name | default('ec2_instance_create-default-external-sg') }}"
        description: "{{ ec2_instance_create_external_sg_description | default('Security group for external access') }}"
        vpc_id: "{{ ec2_instance_create_vpc_id }}"
        rules: "{{ ec2_instance_create_external_sg_rules }}"
        tags: "{{ ec2_instance_create_sg_tags | default(omit) }}"
      register: ec2_group_creation

    - name: Associate security group with EC2 instance
      amazon.aws.ec2_instance:
        instance_ids:
          - "{{ ec2_instance.instance_ids[0] }}"
        security_groups:
          - "{{ ec2_instance_create_external_sg_name | default('ec2_instance_create-default-external-sg') }}"
        vpc_subnet_id: "{{ ec2_instance_create_vpc_subnet_id }}"
      register: ec2_instance_associate_external_sg

- name: Create and Attach Internet Gateway if enabled
  when: ec2_instance_create_associate_igw is true
  block:
    - name: Create an Internet Gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ ec2_instance_create_aws_region }}"
        vpc_id: "{{ ec2_instance_create_vpc_id }}"
        state: present
        tags: "{{ ec2_instance_create_igw_tags | default(omit) }}"
      register: internet_gateway

    - name: Modify the route table to route internet traffic to Internet Gateway
      amazon.aws.ec2_vpc_route_table:
        region: "{{ ec2_instance_create_aws_region }}"
        vpc_id: "{{ ec2_instance_create_vpc_id }}"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ internet_gateway.gateway_id }}"
        state: present

- name: Create and associate Elastic IP if enabled
  when: ec2_instance_create_associate_eip is true
  block:
    - name: Allocate and associate Elastic IP
      amazon.aws.ec2_eip:
        device_id: "{{ ec2_instance.instance_ids[0] }}"
        state: present
        release_on_disassociation: true
        tags: "{{ ec2_instance_create_eip_tags | default(omit) }}"
      register: instance_eip

- name: Get EC2 instance info
  amazon.aws.ec2_instance_info:
    instance_ids: "{{ ec2_instance.instance_ids[0] }}"
    region: "{{ ec2_instance_create_aws_region }}"
  register: _ec2_instance

- name: Output details of the created EC2 instance
  ansible.builtin.debug:
    msg:
      - "EC2 instance {{ ec2_instance.instance_ids[0] }} created successfully"
      - "Instance details: {{ _ec2_instance.instances[0] }}"